=================================
Using the Authorization Code Flow
=================================

.. _auth-code-flow:

.. warning::
   A web server must be configured to accept the redirect back from the Blizzard authentication servers in order to
   use any endpoint that requires the authorization workflow enabled client.  They are listed on the
   `Authorization Code Flow`_

.. note::
   - Note that you can still use the user authorization client, with the endpoints that accept the client credentials
     as well.
   - Any OAuth v2 or OpenID Connect client will work with the endpoints.  The ones contained in the package are for
     convenience
   - Authorization Code Flow will be the most common for user authentication, while credential client code flow
     will be for backend work, such as maintaining the persistent data, such as playable classes.

The Workflow
------------

#. The user goes to a login page on a site
#. The site redirects the the user to the authorization url, generated by client.authorization_url()
#. The user then successfully logs into the Battle.net authorization server, and allows access to the account
   information
#. The Battle.net server, then redirects the user back to the redirect_url


Example
-------
The below example assumes, that you are using the WoWClient included with the package.  Again, you are not required
to use any of the included clients.  The only requirement is that you use an OAuth V2 or OpenID Connect based client


.. code-block:: python3

    > from battlenet_client import wow
    > client = wow.WoWClient(<region>, scope=['wow.profile'], redirect_uri=<redirect_uri>,
                             client_id=<CLIENT_ID>, client_secret=<CLIENT_SECRET>)

    # Once the client has been instantiated, then the have the code redirect the user to the authorization URL
    > redirect(client.authorization_url())

    # Assuming the user was successfully authenticated with Battle.net, they will be redirected back to <redirect_uri>
    # there the server will process the callback request, and then you can access the API as normal
    > from battlenet_client.wow.game_data import PlayableClass
    > PlayableClass.playable_class(client, '<region_tag>', class_id=7, locale=<localization>)

    # returns the data for the shaman class
    {'_links': {'self': {'href': 'https://us.api.blizzard.com/data/wow/playable-class/...
    > client.account.account_profile_summary('en_US')
    # returns data about the account (assuming the user has authorized your application to access it)
    {"_links": {"self": {"href": "https://us.api.blizzard.com/profile/user/wow?namespace=profile-us"}, ...

.. _Authorization Code Flow: 'https://develop.battle.net/documentation/guides/using-oauth/authorization-code-flow'
